[tox]
envlist =
    py{38,39,310,311,dev}-test{,-alldeps,-oldestdeps,-devdeps,-numpy121,-numpy122,-numpy123,-numpy124,-numpy125,-numpy126,numpy-20}{,-cov}
    build_docs
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]

# Pass through the following environemnt variables which are needed for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI,TEST_READ_HUGE_FILE,FC_GFORTRAN,ADS_DEV_KEY,OORB_DATA

# For coverage, we need to pass extra options to the C compiler
setenv =
    cov: CFLAGS = --coverage -fno-inline-functions -O0
    image: MPLFLAGS = --mpl
    !image: MPLFLAGS =

# Run the tests in a temporary directory to make sure that we don't import
# sbpy from the source tree
changedir = .tmp/{envname}

# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy121: with numpy 1.21.*
    numpy122: with numpy 1.22.*
    numpy123: with numpy 1.23.*
    numpy124: with numpy 1.24.*
    numpy125: with numpy 1.25.*
    numpy126: with numpy 1.26.*
    numpy20: with numpy 2.0.*
    image: with image tests
    mpldev: with the latest developer version of matplotlib
    double: twice in a row to check for global state changes

deps =
    numpy121: numpy==1.21.*
    numpy122: numpy==1.22.*
    numpy123: numpy==1.23.*
    numpy124: numpy==1.24.*
    numpy125: numpy==1.25.*
    numpy126: numpy==1.26.*
    numpy20: numpy==2.0.*

    image: pytest-mpl

    # The oldestdeps factor is intended to be used to install the oldest versions of all
    # dependencies that have a minimum version.
    oldestdeps: numpy==1.21.*
    oldestdeps: matplotlib==3.3.*
    oldestdeps: scipy==1.6.*
    oldestdeps: synphot==1.1.*
    oldestdeps: astropy==5.3.*
    oldestdeps: ads==0.12.*

    # The devdeps factor is intended to be used to install the latest developer version
    # of key dependencies.
    devdeps: numpy>=0.0.dev0
    devdeps: scipy>=0.0.dev0
    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy
    devdeps: git+https://github.com/astropy/astroquery.git#egg=astroquery
    devdeps,mpldev: matplotlib>=0.0.dev0

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test: test
    alldeps: all

commands =
    pip freeze

    !cov: pytest --pyargs sbpy {toxinidir}/docs {env:MPLFLAGS} {posargs}
    cov: pytest --pyargs sbpy  {env:MPLFLAGS} --cov sbpy --cov-config={toxinidir}/setup.cfg {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html {posargs}

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html --keep-going

[testenv:codestyle]
# We list the warnings/errors to check for here rather than in setup.cfg because
# we don't want these options to apply whenever anyone calls flake8 from the
# command-line or their code editor - in this case all warnings/errors should be
# checked for. The warnings/errors we check for here are:
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E301 - expected 1 blank line, found 0
# E302 - expected 2 blank lines, found 0
# E303 - too many blank lines (3)
# E304 - blank lines found after function decorator
# E305 - expected 2 blank lines after class or function definition
# E306 - expected 1 blank line before a nested definition
# E502 - the backslash is redundant between brackets
# E722 - do not use bare except
# E901 - SyntaxError or IndentationError
# E902 - IOError
# E999: SyntaxError -- failed to compile a file into an Abstract Syntax Tree
# F822: undefined name in __all__
# F823: local variable name referenced before assignment
changedir = ./
skip_install = true
description = check code style, e.g. with flake8
deps = flake8
# commands = flake8 sbpy --count --select=E101,W191,W291,W292,W293,W391,E111,E112,E113,E30,E502,E722,E901,E902,E999,F822,F823
commands = flake8 sbpy --count --select=E101,E111,E112,E113,E124,E201,E202,E203,E211,E221,E225,E231,E241,E251,E261,E265,E271,E272,E301,E302,E303,E305,E502,E703,E711,E712,E714,E722,E901,E902,W191,W291,W292,W293,W391
